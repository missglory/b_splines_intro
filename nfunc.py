import numpy as np
import matplotlib.pyplot as plt
n = 4
q = 3
tmax = 100
knot = np.array([0,0,0,0.333,0.666,1,1,1])
n0 = np.array([
[1.000, 0.980, 0.960, 0.941, 0.922, 0.902, 0.884, 0.865, 0.846, 0.828, 0.810, 0.792, 0.774, 0.757, 0.740, 0.723, 0.706, 0.689, 0.672, 0.656, 0.640, 0.624, 0.608, 0.593, 0.578, 0.562, 0.548, 0.533, 0.518, 0.504, 0.490, 0.476, 0.462, 0.449, 0.436, 0.422, 0.410, 0.397, 0.384, 0.372, 0.360, 0.348, 0.336, 0.325, 0.314, 0.303, 0.292, 0.281, 0.270, 0.260, 0.250, 0.240, 0.230, 0.221, 0.212, 0.202, 0.194, 0.185, 0.176, 0.168, 0.160, 0.152, 0.144, 0.137, 0.130, 0.123, 0.116, 0.109, 0.102, 0.096, 0.090, 0.084, 0.078, 0.073, 0.068, 0.062, 0.058, 0.053, 0.048, 0.044, 0.040, 0.036, 0.032, 0.029, 0.026, 0.022, 0.020, 0.017, 0.014, 0.012, 0.010, 0.008, 0.006, 0.005, 0.004, 0.003, 0.002, 0.001, 0.000, 0.000], 
[0.000, 0.020, 0.039, 0.058, 0.077, 0.095, 0.113, 0.130, 0.147, 0.164, 0.180, 0.196, 0.211, 0.226, 0.241, 0.255, 0.269, 0.282, 0.295, 0.308, 0.320, 0.332, 0.343, 0.354, 0.365, 0.375, 0.385, 0.394, 0.403, 0.412, 0.420, 0.428, 0.435, 0.442, 0.449, 0.455, 0.461, 0.466, 0.471, 0.476, 0.480, 0.484, 0.487, 0.490, 0.493, 0.495, 0.497, 0.498, 0.499, 0.500, 0.500, 0.500, 0.499, 0.498, 0.497, 0.495, 0.493, 0.490, 0.487, 0.484, 0.480, 0.476, 0.471, 0.466, 0.461, 0.455, 0.449, 0.442, 0.435, 0.428, 0.420, 0.412, 0.403, 0.394, 0.385, 0.375, 0.365, 0.354, 0.343, 0.332, 0.320, 0.308, 0.295, 0.282, 0.269, 0.255, 0.241, 0.226, 0.211, 0.196, 0.180, 0.164, 0.147, 0.130, 0.113, 0.095, 0.077, 0.058, 0.039, 0.020], 
[0.000, 0.000, 0.000, 0.001, 0.002, 0.003, 0.004, 0.005, 0.006, 0.008, 0.010, 0.012, 0.014, 0.017, 0.020, 0.023, 0.026, 0.029, 0.032, 0.036, 0.040, 0.044, 0.048, 0.053, 0.058, 0.062, 0.068, 0.073, 0.078, 0.084, 0.090, 0.096, 0.102, 0.109, 0.116, 0.122, 0.130, 0.137, 0.144, 0.152, 0.160, 0.168, 0.176, 0.185, 0.194, 0.202, 0.212, 0.221, 0.230, 0.240, 0.250, 0.260, 0.270, 0.281, 0.292, 0.303, 0.314, 0.325, 0.336, 0.348, 0.360, 0.372, 0.384, 0.397, 0.410, 0.422, 0.436, 0.449, 0.462, 0.476, 0.490, 0.504, 0.518, 0.533, 0.548, 0.562, 0.578, 0.593, 0.608, 0.624, 0.640, 0.656, 0.672, 0.689, 0.706, 0.723, 0.740, 0.757, 0.774, 0.792, 0.810, 0.828, 0.846, 0.865, 0.884, 0.902, 0.922, 0.941, 0.960, 0.980] 
])
tn = np.linspace(0., 1., n0[0].shape[0])
# for i in range(n + q):
#     for dt in range(tmax):
#         if tn[dt] >= knot[i] and tn[dt] < knot[i + 1]:
#             n0[i,dt] = 1

# //    for (int dq = 1; dq < 3; dq++)
# //    {
# //        for (int j = 0; j < n + dq - 1; j++)
# //        {
# //            for (int i = 0; i < tn; i++)
# //            {
# //                float t = (float)i / tn;
# //                float mul1 = N[dq - 1].at<float>(j, i);
# //                float mul2 = N[dq - 1].at<float>(j + 1, i);
# //                float del1 = knots[j + dq] - knots[j];
# //                float del2 = knots[j + dq + 1] - knots[j + 1];
# //                float dist1 = t - knots[j];
# //                float dist2 = (knots[j + dq + 1] - t);
# //                if (del1 > eps && mul1 > eps)
# //                {
# //                    N[dq].at<float>(j, i) = dist1 / del1 * mul1;
# //                }
# //                if (del2 > eps && mul2 > eps) {
# //                    N[dq].at<float>(j, i) += dist2 / del2 * mul2;
# //                }
# //            }
# //        }
# //    }
# nnext = np.zeros((n + q, tmax))

# for dq in range(1, 3):
#     for j in range (n + q - dq):
#         for i in range(tmax):
#             t = i // tmax
#             mul1 = n0[j, i]
#             mul2 = n0[j + 1, i]
#             del1 = knot[j + dq] - knot[j]
#             del2 = knot[j + dq + 1] - knot[j + 1]
#             dist1 = t - knot[j]
#             dist2 = knot[j + dq + 1] - t
#             if del1 > 0 and mul1 > 0:
#                 nnext[j, i] = dist1 // del1 * mul1
#             if del2 > 0 and mul2 > 0:
#                 nnext[j, i] += dist2 // del2 * mul2


for i in range(3):
    plt.plot(tn, n0[i].flatten(), '.')
plt.show()